name: CI/CD for Dockerized Streamlit app

# Trigger the workflow on any push to the main branch or pull request
on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  
  # testdockerbuild:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Build The Docker Image
  #     run: docker build . --file DockerFile --tag workflow-test:$(date +%s)

  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1.1: Install git LFS
      - name: Install git-lfs
        run: sudo apt-get install git-lfs

      # Step 1.2: Set up git LFS and check out code   
      - name: Setup git-lfs and check out code
        run: git lfs install
      - uses: actions/checkout@v3
        with:
          lfs: true
      # # Step 1: Check out the code from the repository
      # - name: Check out code
      #   uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests
      - name: Run tests
        run: pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    # # Step 1.1: Install git LFS
    # - name: Install git-lfs
    #   run: sudo apt-get install git-lfs

    # # Step 1.2: Set up git LFS and check out code   
    # - name: Setup git-lfs and check out code
    #   run: git lfs install
    # - uses: actions/checkout@v3
    #   with:
    #     lfs: true
      
    # Step 1: checkout code 
    - name: Checkout code
      uses: actions/checkout@v3

    
    - name: Free up disk space
      run: |
        echo "Disk space before cleanup:"
        df -h
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get clean
        docker system prune -af || true
        echo "Disk space after cleanup:"
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2


    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD_WAFER }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./DockerFile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/streamlit-wafer-app:latest

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}